if ($ENV{BUILD_PASS} STREQUAL "arm")
    message("Compiling ARM based targets.")

    set(CMAKE_SYSTEM_NAME Generic)
    set(CMAKE_SYSTEM_PROCESSOR arm)
    set(TOOLCHAIN_PREFIX "/usr/bin/arm-none-eabi-")

    set(CMAKE_C_COMPILER ${TOOLCHAIN_PREFIX}gcc)
    set(CMAKE_ASM_COMPILER ${TOOLCHAIN_PREFIX}gcc)
    set(CMAKE_CXX_COMPILER ${TOOLCHAIN_PREFIX}g++)
    set(CMAKE_OBJCOPY ${TOOLCHAIN_PREFIX}objcopy)
    set(CMAKE_SIZE ${TOOLCHAIN_PREFIX}size)

    set(CMAKE_EXECUTABLE_SUFFIX_ASM ".elf")
    set(CMAKE_EXECUTABLE_SUFFIX_C ".elf")
    set(CMAKE_EXECUTABLE_SUFFIX_CXX ".elf")
elseif($ENV{BUILD_PASS} STREQUAL "local")
    message("Compiling targets for local testing.")
else()
    message(FATAL_ERROR "Attempting to execute invalid build pass. NOTE: you should be calling `build.sh` unless you know what you are doing.")
endif()

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_C_STANDARD 23)
set(COMMON_COMPILE_FLAGS -Wall -fconcepts-diagnostics-depth=3 -Wno-psabi)
set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE INTERNAL "")
